<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="${basedir}/logs/nlog-internal.txt"
      internalLogToConsole="false"
      internalLogToConsoleError="true"
      internalLogIncludeTimestamp="true"
      throwConfigExceptions="true">

  <!-- enable asp.net core layout renderers -->
  <!-- enable nlog storage layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- console log -->
    <!-- similar format to ASP.NET Core Console Logger (without Level) -->
    <target xsi:type="ColoredConsole" name="console"
            useDefaultRowHighlightingRules="false"
            layout="${pad:padding=4:fixedLength=true:inner=${level:lowercase=true}}: ${logger}${whenEmpty:whenEmpty=${event-properties:item=EventId_Id}:Inner=[0]}${newline}      ${message}${onexception:inner=${newline}}${onexception:inner=${exception:format=toString}">
      <highlight-word foregroundColor="DarkGreen" text="info:" regex="info" compileRegex="true"/>
      <highlight-word foregroundColor="Yellow" text="warn:" regex="warn" compileRegex="true"/>
      <highlight-word foregroundColor="black" backgroundColor="Red" text="erro:" regex="erro" compileRegex="true"/>
      <highlight-word foregroundColor="White" backgroundColor="Red" text="fata:" regex="fata" compileRegex="true"/>
    </target>

    <!-- file log -->
    <!-- Uses some ASP.NET core renderers -->
    <target name="app" xsi:type="AsyncWrapper" queueLimit="5000" timeToSleepBetweenBatches="0" overflowAction="Block">
      <target name="App" xsi:type="File" fileName="${basedir}/logs/app.log" encoding="UTF-8" lineEnding="LF"
            keepFileOpen="true"
            archiveFileName="logs/app.{#}.log"
            archiveEvery="Day"
            archiveNumbering="Rolling"
            maxArchiveFiles="7"
            concurrentWrites="true">
        <layout xsi:type="JsonLayout">
          <attribute name="eventId" layout="${whenEmpty:whenEmpty=${event-properties:item=EventId_Id}:Inner=0}" />
          <attribute name="time" layout="${longdate}" />
          <attribute name="level" layout="${level:lowerCase=true}"/>
          <attribute name="env" layout="${environment:variable=ASPNETCORE_ENVIRONMENT}" />
          <attribute name="pid" layout="${processid}" />
          <attribute name="threadid" layout="${threadid}" />
          <attribute name="logger" layout="${logger}" />
          <attribute name="message" layout="${message}" />
          <attribute name="callsite" layout="${callsite}" />
          <attribute name="linenumber" layout="${callsite-linenumber}" />
          <attribute name="filename" layout="${when:when='${callsite:fileName=true:includeSourcePath=true:className=false:methodName=false:includeNamespace=false}' == '':inner=null:else=${callsite:fileName=true:includeSourcePath=true:className=false:methodName=false:includeNamespace=false}}" />
          <attribute name="asp-requestip" layout="${when:when='${aspnet-request-ip}' == '':Inner=null:else=${aspnet-request-ip}}" />
          <attribute name="asp-method" layout="${when:when='${aspnet-request-method}' == '':Inner=null:else=${aspnet-request-method}}" />
          <attribute name="asp-url" layout="${when:when='${aspnet-request-url}' == '':Inner=null:else=${aspnet-request-url}}" />
          <attribute name="asp-controller" layout="${when:when='${aspnet-mvc-controller}' == '':Inner=null:else=${aspnet-mvc-controller}}" />
          <attribute name="asp-action" layout="${when:when='${aspnet-mvc-action}' == '':Inner=null:else=${aspnet-mvc-action}}" />
        </layout>
      </target>
    </target>

    <!-- write logs to file, only error -->
    <target name="error" xsi:type="AsyncWrapper" queueLimit="5000" timeToSleepBetweenBatches="0" overflowAction="Block">
      <target name="Error" xsi:type="File" fileName="${basedir}/logs/error.log" encoding="UTF-8" lineEnding="LF"
              keepFileOpen="true"
              archiveFileName="logs/error.{#}.log"
              archiveEvery="Day"
              archiveNumbering="Rolling"
              maxArchiveFiles="7"
              concurrentWrites="true">
        <layout xsi:type="JsonLayout">
          <attribute name="eventId" layout="${whenEmpty:whenEmpty=${event-properties:item=EventId_Id}:Inner=0}" />
          <attribute name="time" layout="${longdate}" />
          <attribute name="level" layout="${level:lowerCase=true}"/>
          <attribute name="env" layout="${environment:variable=ASPNETCORE_ENVIRONMENT}" />
          <attribute name="pid" layout="${processid}" />
          <attribute name="threadid" layout="${threadid}" />
          <attribute name="logger" layout="${logger}" />
          <attribute name="message" layout="${message}" />
          <attribute name="callsite" layout="${callsite}" />
          <attribute name="callsite-linenumber" layout="${callsite-linenumber}" />
          <attribute name="type" layout="${exception:format=Type}" />
          <attribute name="message" layout="${exception:format=Message}" />
          <attribute name="stacktrace" layout="${replace-newlines:replacement=\n:${exception:format=StackTrace,Data}}" />
        </layout>
      </target>
    </target>

    <!-- another file log, only fatal -->
    <target name="fatal" xsi:type="AsyncWrapper" queueLimit="5000" timeToSleepBetweenBatches="0" overflowAction="Block">
      <target name="Fatal" xsi:type="File" fileName="${basedir}/logs/fatal.log" encoding="UTF-8" lineEnding="LF"
            keepFileOpen="true"
            archiveFileName="logs/fatal.{#}.log"
            archiveEvery="Day"
            archiveNumbering="Rolling"
            maxArchiveFiles="7"
            concurrentWrites="true">
        <layout xsi:type="JsonLayout">
          <attribute name="eventId" layout="${whenEmpty:whenEmpty=${event-properties:item=EventId_Id}:Inner=0}" />
          <attribute name="time" layout="${longdate}" />
          <attribute name="level" layout="${level:lowerCase=true}"/>
          <attribute name="env" layout="${environment:variable=ASPNETCORE_ENVIRONMENT}" />
          <attribute name="pid" layout="${processid}" />
          <attribute name="threadid" layout="${threadid}" />
          <attribute name="logger" layout="${logger}" />
          <attribute name="message" layout="${message}" />
          <attribute name="callsite" layout="${callsite}" />
          <attribute name="callsite-linenumber" layout="${callsite-linenumber}" />
          <attribute name="type" layout="${exception:format=Type}" />
          <attribute name="message" layout="${exception:format=Message}" />
          <attribute name="stacktrace" layout="${replace-newlines:replacement=\n:${exception:format=StackTrace,Data}}" />
        </layout>
      </target>
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="*" minlevel="Debug" writeTo="console" />

    <!-- including from Microsoft-->
    <logger name="*" levels="Error" writeTo="error" />
    <logger name="*" levels="Fatal" writeTo="fatal" />
    <logger name="*" minlevel="Debug" writeTo="app" />

    <!-- skip non-critical Microsoft logs and set blackhole, so log only own logs -->
    <!--<logger name="Microsoft.*" maxLevel="Info" final="true" />-->
    <!-- BlackHole without writeTo -->
    <!--<logger name="*" minlevel="Debug" writeTo="" final="true" />-->
  </rules>
</nlog>